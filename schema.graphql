type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  spender: Bytes! # address
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BougthCarbonCredits @entity(immutable: true) {
  id: Bytes!
  buyer: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BougthCarbonCreditsCrosschain @entity(immutable: true) {
  id: Bytes!
  buyer: Bytes! # address
  amount: BigInt! # uint256
  network: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type GroceryCarbonFootprintOffset @entity(immutable: true) {
  id: Bytes!
  requestId: Bytes! # bytes32
  moneySpentProteins: String! # string
  moneySpentFats: String! # string
  moneySpentCarbs: String! # string
  proteinsEmission: BigInt! # uint256
  fatsEmission: BigInt! # uint256
  carbsEmission: BigInt! # uint256
  foodEmission: BigInt! # uint256
  buyer: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RetiredCarbonCredits @entity(immutable: true) {
  id: Bytes!
  buyer: Bytes! # address
  amount: BigInt! # uint256
  certificateId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RetiredCarbonCreditsCrosschain @entity(immutable: true) {
  id: Bytes!
  buyer: Bytes! # address
  amount: BigInt! # uint256
  network: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferCrosschain @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  amount: BigInt! # uint256
  network: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferFromCrosschain @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  from: Bytes! # address
  to: Bytes! # address
  amount: BigInt! # uint256
  network: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TravelCarbonFootprintOffset @entity(immutable: true) {
  id: Bytes!
  requestId: Bytes! # bytes32
  distance: String! # string
  nights: String! # string
  flightEmission: BigInt! # uint256
  hotelEmission: BigInt! # uint256
  travelEmission: BigInt! # uint256
  buyer: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
